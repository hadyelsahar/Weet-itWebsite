//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Weetit_webite.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="relation", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class relation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.entity destinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.entity[] entitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.entity sourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.entity destination {
            get {
                return this.destinationField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationField, value) != true)) {
                    this.destinationField = value;
                    this.RaisePropertyChanged("destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.entity[] entities {
            get {
                return this.entitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.entitiesField, value) != true)) {
                    this.entitiesField = value;
                    this.RaisePropertyChanged("entities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.entity source {
            get {
                return this.sourceField;
            }
            set {
                if ((object.ReferenceEquals(this.sourceField, value) != true)) {
                    this.sourceField = value;
                    this.RaisePropertyChanged("source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="entity", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string labelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.entity nextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string uriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string label {
            get {
                return this.labelField;
            }
            set {
                if ((object.ReferenceEquals(this.labelField, value) != true)) {
                    this.labelField = value;
                    this.RaisePropertyChanged("label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.entity next {
            get {
                return this.nextField;
            }
            set {
                if ((object.ReferenceEquals(this.nextField, value) != true)) {
                    this.nextField = value;
                    this.RaisePropertyChanged("next");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string uri {
            get {
                return this.uriField;
            }
            set {
                if ((object.ReferenceEquals(this.uriField, value) != true)) {
                    this.uriField = value;
                    this.RaisePropertyChanged("uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="questionAnswer", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class questionAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int answerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] objectLabelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] objectUriListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> predicateLabelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> predicateUriListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.utilquestionTypes questiontypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> subjectLabelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> subjectUriListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int answerCount {
            get {
                return this.answerCountField;
            }
            set {
                if ((this.answerCountField.Equals(value) != true)) {
                    this.answerCountField = value;
                    this.RaisePropertyChanged("answerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] objectLabelList {
            get {
                return this.objectLabelListField;
            }
            set {
                if ((object.ReferenceEquals(this.objectLabelListField, value) != true)) {
                    this.objectLabelListField = value;
                    this.RaisePropertyChanged("objectLabelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] objectUriList {
            get {
                return this.objectUriListField;
            }
            set {
                if ((object.ReferenceEquals(this.objectUriListField, value) != true)) {
                    this.objectUriListField = value;
                    this.RaisePropertyChanged("objectUriList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> predicateLabelList {
            get {
                return this.predicateLabelListField;
            }
            set {
                if ((object.ReferenceEquals(this.predicateLabelListField, value) != true)) {
                    this.predicateLabelListField = value;
                    this.RaisePropertyChanged("predicateLabelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> predicateUriList {
            get {
                return this.predicateUriListField;
            }
            set {
                if ((object.ReferenceEquals(this.predicateUriListField, value) != true)) {
                    this.predicateUriListField = value;
                    this.RaisePropertyChanged("predicateUriList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.utilquestionTypes questiontype {
            get {
                return this.questiontypeField;
            }
            set {
                if ((this.questiontypeField.Equals(value) != true)) {
                    this.questiontypeField = value;
                    this.RaisePropertyChanged("questiontype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> subjectLabelList {
            get {
                return this.subjectLabelListField;
            }
            set {
                if ((object.ReferenceEquals(this.subjectLabelListField, value) != true)) {
                    this.subjectLabelListField = value;
                    this.RaisePropertyChanged("subjectLabelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> subjectUriList {
            get {
                return this.subjectUriListField;
            }
            set {
                if ((object.ReferenceEquals(this.subjectUriListField, value) != true)) {
                    this.subjectUriListField = value;
                    this.RaisePropertyChanged("subjectUriList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="util.questionTypes", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    public enum utilquestionTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        literalOrURIAnswer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        literalAnswer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        URIAsnwer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        countAnswer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        unkown = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartialAnswer", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class PartialAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int answerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] objectLabelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] objectUriListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.utilquestionTypes questiontypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int answerCount {
            get {
                return this.answerCountField;
            }
            set {
                if ((this.answerCountField.Equals(value) != true)) {
                    this.answerCountField = value;
                    this.RaisePropertyChanged("answerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] objectLabelList {
            get {
                return this.objectLabelListField;
            }
            set {
                if ((object.ReferenceEquals(this.objectLabelListField, value) != true)) {
                    this.objectLabelListField = value;
                    this.RaisePropertyChanged("objectLabelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] objectUriList {
            get {
                return this.objectUriListField;
            }
            set {
                if ((object.ReferenceEquals(this.objectUriListField, value) != true)) {
                    this.objectUriListField = value;
                    this.RaisePropertyChanged("objectUriList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.utilquestionTypes questiontype {
            get {
                return this.questiontypeField;
            }
            set {
                if ((this.questiontypeField.Equals(value) != true)) {
                    this.questiontypeField = value;
                    this.RaisePropertyChanged("questiontype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceInformation", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class ResourceInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<System.Collections.Generic.KeyValuePair<string, string>, System.Collections.Generic.KeyValuePair<string, string>[]>[] FinalComparisonObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string> IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] predicates_resourceIsObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] predicates_resourceIsSubjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<System.Collections.Generic.KeyValuePair<string, string>, System.Collections.Generic.KeyValuePair<string, string>[]>[] rawComparisonObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] resources_resourceIsObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string>[] resources_resourceIsSubjField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<System.Collections.Generic.KeyValuePair<string, string>, System.Collections.Generic.KeyValuePair<string, string>[]>[] FinalComparisonObject {
            get {
                return this.FinalComparisonObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalComparisonObjectField, value) != true)) {
                    this.FinalComparisonObjectField = value;
                    this.RaisePropertyChanged("FinalComparisonObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] predicates_resourceIsObj {
            get {
                return this.predicates_resourceIsObjField;
            }
            set {
                if ((object.ReferenceEquals(this.predicates_resourceIsObjField, value) != true)) {
                    this.predicates_resourceIsObjField = value;
                    this.RaisePropertyChanged("predicates_resourceIsObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] predicates_resourceIsSubj {
            get {
                return this.predicates_resourceIsSubjField;
            }
            set {
                if ((object.ReferenceEquals(this.predicates_resourceIsSubjField, value) != true)) {
                    this.predicates_resourceIsSubjField = value;
                    this.RaisePropertyChanged("predicates_resourceIsSubj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<System.Collections.Generic.KeyValuePair<string, string>, System.Collections.Generic.KeyValuePair<string, string>[]>[] rawComparisonObject {
            get {
                return this.rawComparisonObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.rawComparisonObjectField, value) != true)) {
                    this.rawComparisonObjectField = value;
                    this.RaisePropertyChanged("rawComparisonObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] resources_resourceIsObj {
            get {
                return this.resources_resourceIsObjField;
            }
            set {
                if ((object.ReferenceEquals(this.resources_resourceIsObjField, value) != true)) {
                    this.resources_resourceIsObjField = value;
                    this.RaisePropertyChanged("resources_resourceIsObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string>[] resources_resourceIsSubj {
            get {
                return this.resources_resourceIsSubjField;
            }
            set {
                if ((object.ReferenceEquals(this.resources_resourceIsSubjField, value) != true)) {
                    this.resources_resourceIsSubjField = value;
                    this.RaisePropertyChanged("resources_resourceIsSubj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MergedService.choiceProfile", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    public enum MergedServicechoiceProfile : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        micro = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mini = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        full = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.MicroProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.MiniProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.FullProfile))]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MicroProfile", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.MiniProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.FullProfile))]
    public partial class MicroProfile : Weetit_webite.ServiceReference1.Profile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MiniProfile", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weetit_webite.ServiceReference1.FullProfile))]
    public partial class MiniProfile : Weetit_webite.ServiceReference1.MicroProfile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, Weetit_webite.ServiceReference1.Entity1[]>[] DetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, Weetit_webite.ServiceReference1.Entity1[]>[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullProfile", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class FullProfile : Weetit_webite.ServiceReference1.MiniProfile {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Weetit_webite.ServiceReference1.Entity1[] RelatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Weetit_webite.ServiceReference1.Entity1[] Related {
            get {
                return this.RelatedField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedField, value) != true)) {
                    this.RelatedField = value;
                    this.RaisePropertyChanged("Related");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/mergedServices")]
    [System.SerializableAttribute()]
    public partial class Entity1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.RelationGeneratorServiceInterface")]
    public interface RelationGeneratorServiceInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RelationGeneratorServiceInterface/simpleGetRelations", ReplyAction="http://tempuri.org/RelationGeneratorServiceInterface/simpleGetRelationsResponse")]
        string[][] simpleGetRelations(string[] uri, int Distance, int Limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RelationGeneratorServiceInterface/simpleGetRelationWithLabels", ReplyAction="http://tempuri.org/RelationGeneratorServiceInterface/simpleGetRelationWithLabelsR" +
            "esponse")]
        System.Collections.Generic.KeyValuePair<string, string>[][] simpleGetRelationWithLabels(string[] uri, int Distance, int Limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RelationGeneratorServiceInterface/getRelations", ReplyAction="http://tempuri.org/RelationGeneratorServiceInterface/getRelationsResponse")]
        Weetit_webite.ServiceReference1.relation[] getRelations(string[] uri, int Distance, int Limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RelationGeneratorServiceInterface/getRelationWithLabels", ReplyAction="http://tempuri.org/RelationGeneratorServiceInterface/getRelationWithLabelsRespons" +
            "e")]
        Weetit_webite.ServiceReference1.relation[] getRelationWithLabels(string[] uri, int Distance, int Limit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RelationGeneratorServiceInterfaceChannel : Weetit_webite.ServiceReference1.RelationGeneratorServiceInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelationGeneratorServiceInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.RelationGeneratorServiceInterface>, Weetit_webite.ServiceReference1.RelationGeneratorServiceInterface {
        
        public RelationGeneratorServiceInterfaceClient() {
        }
        
        public RelationGeneratorServiceInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelationGeneratorServiceInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationGeneratorServiceInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationGeneratorServiceInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[][] simpleGetRelations(string[] uri, int Distance, int Limit) {
            return base.Channel.simpleGetRelations(uri, Distance, Limit);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[][] simpleGetRelationWithLabels(string[] uri, int Distance, int Limit) {
            return base.Channel.simpleGetRelationWithLabels(uri, Distance, Limit);
        }
        
        public Weetit_webite.ServiceReference1.relation[] getRelations(string[] uri, int Distance, int Limit) {
            return base.Channel.getRelations(uri, Distance, Limit);
        }
        
        public Weetit_webite.ServiceReference1.relation[] getRelationWithLabels(string[] uri, int Distance, int Limit) {
            return base.Channel.getRelationWithLabels(uri, Distance, Limit);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.keywordSearchServiceInterface")]
    public interface keywordSearchServiceInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/geturi_bestMatch", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/geturi_bestMatchResponse")]
        string geturi_bestMatch(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/geturi", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/geturiResponse")]
        string[] geturi(string keyword, int MaxUris);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/GetUris_VsKeywords", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/GetUris_VsKeywordsResponse")]
        string[] GetUris_VsKeywords(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/GetUris_VsKeyword_comma", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/GetUris_VsKeyword_commaResponse")]
        string GetUris_VsKeyword_comma(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/geturis_List", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/geturis_ListResponse")]
        string[] geturis_List(string[] keywords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/keywordSearchServiceInterface/geturis_List_WithMaxuris", ReplyAction="http://tempuri.org/keywordSearchServiceInterface/geturis_List_WithMaxurisResponse" +
            "")]
        string[][] geturis_List_WithMaxuris(string[] keywords, int MaxUris);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface keywordSearchServiceInterfaceChannel : Weetit_webite.ServiceReference1.keywordSearchServiceInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class keywordSearchServiceInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.keywordSearchServiceInterface>, Weetit_webite.ServiceReference1.keywordSearchServiceInterface {
        
        public keywordSearchServiceInterfaceClient() {
        }
        
        public keywordSearchServiceInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public keywordSearchServiceInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public keywordSearchServiceInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public keywordSearchServiceInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string geturi_bestMatch(string keyword) {
            return base.Channel.geturi_bestMatch(keyword);
        }
        
        public string[] geturi(string keyword, int MaxUris) {
            return base.Channel.geturi(keyword, MaxUris);
        }
        
        public string[] GetUris_VsKeywords(string text) {
            return base.Channel.GetUris_VsKeywords(text);
        }
        
        public string GetUris_VsKeyword_comma(string text) {
            return base.Channel.GetUris_VsKeyword_comma(text);
        }
        
        public string[] geturis_List(string[] keywords) {
            return base.Channel.geturis_List(keywords);
        }
        
        public string[][] geturis_List_WithMaxuris(string[] keywords, int MaxUris) {
            return base.Channel.geturis_List_WithMaxuris(keywords, MaxUris);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.QAServiceInterface")]
    public interface QAServiceInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QAServiceInterface/GetAnswerWithQuestionStructure", ReplyAction="http://tempuri.org/QAServiceInterface/GetAnswerWithQuestionStructureResponse")]
        Weetit_webite.ServiceReference1.questionAnswer[] GetAnswerWithQuestionStructure(string question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QAServiceInterface/GetPartialAnswer", ReplyAction="http://tempuri.org/QAServiceInterface/GetPartialAnswerResponse")]
        Weetit_webite.ServiceReference1.PartialAnswer[] GetPartialAnswer(string question);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QAServiceInterfaceChannel : Weetit_webite.ServiceReference1.QAServiceInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QAServiceInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.QAServiceInterface>, Weetit_webite.ServiceReference1.QAServiceInterface {
        
        public QAServiceInterfaceClient() {
        }
        
        public QAServiceInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QAServiceInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QAServiceInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QAServiceInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Weetit_webite.ServiceReference1.questionAnswer[] GetAnswerWithQuestionStructure(string question) {
            return base.Channel.GetAnswerWithQuestionStructure(question);
        }
        
        public Weetit_webite.ServiceReference1.PartialAnswer[] GetPartialAnswer(string question) {
            return base.Channel.GetPartialAnswer(question);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.CompareWithOnePredicateInterface")]
    public interface CompareWithOnePredicateInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CompareWithOnePredicateInterface/CompareWithRespect", ReplyAction="http://tempuri.org/CompareWithOnePredicateInterface/CompareWithRespectResponse")]
        string[][] CompareWithRespect(string[] subjectsNames, string predicateURI, int limit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CompareWithOnePredicateInterfaceChannel : Weetit_webite.ServiceReference1.CompareWithOnePredicateInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompareWithOnePredicateInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.CompareWithOnePredicateInterface>, Weetit_webite.ServiceReference1.CompareWithOnePredicateInterface {
        
        public CompareWithOnePredicateInterfaceClient() {
        }
        
        public CompareWithOnePredicateInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompareWithOnePredicateInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompareWithOnePredicateInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompareWithOnePredicateInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[][] CompareWithRespect(string[] subjectsNames, string predicateURI, int limit) {
            return base.Channel.CompareWithRespect(subjectsNames, predicateURI, limit);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ComparisonServiceInterface")]
    public interface ComparisonServiceInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComparisonServiceInterface/Compare", ReplyAction="http://tempuri.org/ComparisonServiceInterface/CompareResponse")]
        Weetit_webite.ServiceReference1.ResourceInformation[] Compare(string[] URIs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComparisonServiceInterface/getID", ReplyAction="http://tempuri.org/ComparisonServiceInterface/getIDResponse")]
        System.Collections.Generic.KeyValuePair<string, string> getID(Weetit_webite.ServiceReference1.ResourceInformation ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComparisonServiceInterface/getPredicates_ResourceIsSubj", ReplyAction="http://tempuri.org/ComparisonServiceInterface/getPredicates_ResourceIsSubjRespons" +
            "e")]
        System.Collections.Generic.KeyValuePair<string, string>[] getPredicates_ResourceIsSubj(Weetit_webite.ServiceReference1.ResourceInformation ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComparisonServiceInterface/getPredicates_ResourceIsObj", ReplyAction="http://tempuri.org/ComparisonServiceInterface/getPredicates_ResourceIsObjResponse" +
            "")]
        System.Collections.Generic.KeyValuePair<string, string>[] getPredicates_ResourceIsObj(Weetit_webite.ServiceReference1.ResourceInformation ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComparisonServiceInterface/getResourcesOfPredicate", ReplyAction="http://tempuri.org/ComparisonServiceInterface/getResourcesOfPredicateResponse")]
        System.Collections.Generic.KeyValuePair<string, string>[] getResourcesOfPredicate(System.Collections.Generic.KeyValuePair<string, string> pred, Weetit_webite.ServiceReference1.ResourceInformation ri);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ComparisonServiceInterfaceChannel : Weetit_webite.ServiceReference1.ComparisonServiceInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComparisonServiceInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.ComparisonServiceInterface>, Weetit_webite.ServiceReference1.ComparisonServiceInterface {
        
        public ComparisonServiceInterfaceClient() {
        }
        
        public ComparisonServiceInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComparisonServiceInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComparisonServiceInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComparisonServiceInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Weetit_webite.ServiceReference1.ResourceInformation[] Compare(string[] URIs) {
            return base.Channel.Compare(URIs);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string> getID(Weetit_webite.ServiceReference1.ResourceInformation ri) {
            return base.Channel.getID(ri);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] getPredicates_ResourceIsSubj(Weetit_webite.ServiceReference1.ResourceInformation ri) {
            return base.Channel.getPredicates_ResourceIsSubj(ri);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] getPredicates_ResourceIsObj(Weetit_webite.ServiceReference1.ResourceInformation ri) {
            return base.Channel.getPredicates_ResourceIsObj(ri);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] getResourcesOfPredicate(System.Collections.Generic.KeyValuePair<string, string> pred, Weetit_webite.ServiceReference1.ResourceInformation ri) {
            return base.Channel.getResourcesOfPredicate(pred, ri);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ProfileConstructorInterface")]
    public interface ProfileConstructorInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProfileConstructorInterface/ConstructProfile", ReplyAction="http://tempuri.org/ProfileConstructorInterface/ConstructProfileResponse")]
        Weetit_webite.ServiceReference1.Profile ConstructProfile(string subjectURI, Weetit_webite.ServiceReference1.MergedServicechoiceProfile profile, int resultLimit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProfileConstructorInterfaceChannel : Weetit_webite.ServiceReference1.ProfileConstructorInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileConstructorInterfaceClient : System.ServiceModel.ClientBase<Weetit_webite.ServiceReference1.ProfileConstructorInterface>, Weetit_webite.ServiceReference1.ProfileConstructorInterface {
        
        public ProfileConstructorInterfaceClient() {
        }
        
        public ProfileConstructorInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileConstructorInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileConstructorInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileConstructorInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Weetit_webite.ServiceReference1.Profile ConstructProfile(string subjectURI, Weetit_webite.ServiceReference1.MergedServicechoiceProfile profile, int resultLimit) {
            return base.Channel.ConstructProfile(subjectURI, profile, resultLimit);
        }
    }
}
